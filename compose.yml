version: "3.8"


services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_axolotl
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - nomad_network
    restart: always

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka_axolotl
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - nomad_network
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-axolotl
    ports:
      - "8081:8080"  # 8081 — внешний порт, 8080 — внутри контейнера
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - nomad_network
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 186Kdc9899K
    ports:
      - "5431:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nomad_network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    command: start-dev
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 186Kdc9899K
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: 186Kdc9899K
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - nomad_network

  discover:
    container_name: discover
    image: discover
    restart: always
    ports:
      - "8761:8761"
    networks:
      - nomad_network

  eureka-gateway:
    container_name: eureka-gateway
    image: eureka-gateway
    depends_on:
      - discover
    restart: always
    environment:
      IP: discover
    ports:
      - "8000:8000"
    networks:
      - nomad_network

networks:
  nomad_network:
    driver: bridge

volumes:
  pgdata:
